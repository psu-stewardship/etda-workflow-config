{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chart.fullname" . }}-redis
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: redis
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  serviceName: {{ .Release.Name }}-redis
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
    spec:
      containers:
      - image: {{ .Values.redis.image }}
        imagePullPolicy: IfNotPresent
        name: redis
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /data
          name: data
      serviceAccount: {{ .Values.global.vault.role }}
      serviceAccountName: {{ .Values.global.vault.role }}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  {{- if .Values.redis.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.redis.persistence.storageSize }}
      storageClassName: {{ .Values.redis.persistence.storageClass }}
      volumeMode: Filesystem
    {{- end }}
{{- end }}